name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./client

      - name: Run tests
        run: npm run test
        working-directory: ./client

      - name: Build project
        run: npm run build
        working-directory: ./client

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Sanitize repository name
        id: sanitize
        run: echo "::set-output name=sanitized_name::$(echo ${{ github.repository }} | tr '/' '-')"

      - name: Create S3 bucket if it doesn't exist
        run: |
          BUCKET_NAME=${{ steps.sanitize.outputs.sanitized_name }}-bucket
          if aws s3 ls "s3://$BUCKET_NAME" 2>&1 | grep -q 'NoSuchBucket'; then
            aws s3 mb s3://$BUCKET_NAME
          fi

      - name: Upload to S3
        run: |
          BUCKET_NAME=${{ steps.sanitize.outputs.sanitized_name }}-bucket
          aws s3 sync client/build/ s3://$BUCKET_NAME --delete

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation-template.yml \
            --stack-name ${{ steps.sanitize.outputs.sanitized_name }} \
            --parameter-overrides S3BucketName=${{ steps.sanitize.outputs.sanitized_name }}-bucket \
            --capabilities CAPABILITY_NAMED_IAM
        working-directory: ./client
