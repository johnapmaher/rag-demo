AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ECRRepository:
    Type: String
    Description: The ECR repository URI
  ImageTag:
    Type: String
    Description: The Docker image tag
  ClusterName:
    Type: String
    Description: The ECS cluster name
  ServiceName:
    Type: String
    Description: The ECS service name
  OpenAIApiKey:
    Type: String
    Description: The OpenAI API key

Resources:
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Ref ClusterName

  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${ServiceName}'
      RetentionInDays: 7

  ApplicationLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties: 
      Name: !Sub '${ServiceName}-alb'
      Subnets:
        - subnet-0b3b2c223bc189405
        - subnet-06c4691a85188d142
      SecurityGroups:
        - sg-022dcc111a874a850
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Type: application

  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: !Sub '${ServiceName}-tg'
      TargetType: ip
      Port: 8000
      Protocol: HTTP
      VpcId: vpc-006678b65f3f4fc0c
      HealthCheckProtocol: HTTP
      HealthCheckPort: '8000'
      HealthCheckPath: /health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5

  LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ECSService:
    Type: 'AWS::ECS::Service'
    DependsOn: 
      - LoadBalancerListener
      - TargetGroup
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref ServiceName
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: fastapi-container
          ContainerPort: 8000
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - subnet-0b3b2c223bc189405
            - subnet-06c4691a85188d142
          SecurityGroups:
            - sg-022dcc111a874a850

  ECSTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref ServiceName
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: 'arn:aws:iam::041094237038:role/my-fastapi-app-stack-ECSExecutionRole-6HWITD9o0NAJ'
      ContainerDefinitions:
        - Name: fastapi-container
          Image: !Sub '${ECRRepository}:${ImageTag}'
          Essential: true
          PortMappings:
            - ContainerPort: 8000
              HostPort: 8000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: OPENAI_API_KEY
              Value: !Ref OpenAIApiKey
          HealthCheck:
            Command: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  ECSExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: ECSExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

Outputs:
  ECSClusterName:
    Description: The name of the ECS cluster
    Value: !Ref ECSCluster
  ECSServiceName:
    Description: The name of the ECS service
    Value: !Ref ECSService
  ECSTaskDefinitionArn:
    Description: The ARN of the ECS task definition
    Value: !Ref ECSTaskDefinition